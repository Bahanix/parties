%h1.top Create your event

#CreatorWizard.fuelux-wizard.wizard
  .header
    %ol.steps

      %li{"data-target" => "#step1"}
        %span Your event
      %li{"data-target" => "#step2"}
        %span Some supplies
      %li{"data-target" => "#step3"}
        %span Your guests

  .widget
    = simple_form_for(@party, html: { class: 'form-horizontal step-content' }) do |f|
      = f.error_notification
      #step1.step-pane
        .form-inputs
          = f.input :name
          = f.input :location
          = f.input :start_at, :as => :datepicker
          = f.input :description, input_html: { rows: 3 }
        .pull-right
          %a.btn.btn-large.btn-next{:href => "#", "data-target" => "#step2"}
            next
            %i.icon-arrow-right
        .clearfix
      #step2.step-pane
        .templates.pull-right
          %a.btn.btn-template{:href => "#templatesModal", "data-toggle" => "modal"}
            %i.icon-bookmark
            Idées
        .items
          = f.simple_fields_for :items do |i|
            = render 'item_fields', :f => i
          .links
            .control-group.form-inputs
              %label.control-label
              .controls
                %input{:type => "text",:disabled => ""}
            = link_to_add_association 'add item', f, :items
            .clearfix
        .pull-right
          %a.btn.btn-large.btn-next{:href => "#", "data-target" => "#step3"}
            next
            %i.icon-arrow-right
        .clearfix
        #templatesModal.modal.hide.fade
          .modal-header
            %button.close{"data-dismiss" => "modal", :type => "button"} ×
            %h3#myModalLabel Choose a template
          .modal-body
            %p
          .modal-footer
            %button.btn{"data-dismiss" => "modal"} Close
      #step3.step-pane
        .form-inputs
          .control-group
            %label.control-label Destinataires
            .controls
              = text_area :post, :body, :rows => 3
        .pull-right
          = f.button :submit, class: 'btn btn-large'
        .clearfix


- content_for :js do
  :javascript
    (function(){
      var $step2 = $('#step2');
      var $tmplModal = $('#templatesModal');
      var gblTemplate;
      var gblSuggestions;

      $('#CreatorWizard').wizard();
      $step2.itemlist();

      if($step2.find('.nested-fields').length == 0){$step2.find('.add_fields').click();}

      // load templates in modal
      $.getJSON('template.json', function(data) {
        gblTemplate = data;
        $tmplList = $tmplModal.find('.modal-body p');
        for(var i in gblTemplate){
          var template = gblTemplate[i];
          
          $tmplList.append('<div class="span2"><label class="template" for="'+template.name+'"  data-dismiss="modal">'+
                            '<div class="thumbnail">'+
                            '<div class="caption">'+(template.image?'<img src="'+template.image+'" />':'')+
                            '<h3>'+template.label+'</h3><p>'+template.desc+'</p>'+
                            '</div></label></div>');
        }
      });

      $.getJSON('suggestions.json', function(data) {
        gblSuggestions = data;
      });

      // add templates items
      $tmplModal.on('click', 'label.template', function(){
        var $elt = $(this);
        for(var i in gblTemplate){
          var template = gblTemplate[i];
          if(template.name === $elt.attr('for')){
            $step2.itemlist('add-items', template.items);
            $elt.attr('checked', false);
            break;
          }
        }
      });

      function getSuggestion(suggestionName){
        if(gblSuggestions){
          for(var i in gblSuggestions){
            if(gblSuggestions[i].value == suggestionName){
              return gblSuggestions[i];
            }
          }
        }
      }

      function setQuickAction(selectedObj){
        console.log(selectedObj);
        $step2.find('.links .quick-action').remove();
        if(selectedObj && selectedObj.next && selectedObj.next.length > 0){
          var $addField = $step2.find('.links .add_fields');
          for(var i in selectedObj.next){
            var nextElt = selectedObj.next[i];
            $addField.after('<a href="#" class="quick-action">add <span>'+nextElt+'</span> ?</a>');
          }
          // add suggested actions
          $step2.find('.links .quick-action').click(function(){
            var itemToAdd = $(this).find('span').html();
            $step2.itemlist('add-items', [itemToAdd]);
            setQuickAction(getSuggestion(itemToAdd));
            $(this).remove();
            return false;
          });
        }
      }

      // watch which item is selected
      $step2.bind('typeahead:selected', function(event, selectedObj){
        setQuickAction(selectedObj);
      });




    }).call(this);
